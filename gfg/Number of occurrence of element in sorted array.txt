class Solution{
public:	
    int firstBS(int arr[], int n, int x){
        
        int l = 0 ;
        int h = n-1;
        
        int res = -1;
        while(l <= h){
            
            int mid = l + (h-l)/2;
            
            if(arr[mid] == x ){
                res = mid ;
                h = mid - 1;
                
            }
            
            if(arr[mid] > x)
                h = mid -1;
            
            else if(arr[mid] < x)
                l = mid +1;
                
        }
        return res;
    }
    
    
    int lastBS( int arr[] , int n , int x){
        
        int l = 0;
        int h = n-1 ;
        int res = -1;
        while(l <= h){
             
             int mid = l+ (h-l)/2 ;
             
             if(arr[mid] == x){
                 res = mid;
                 l = mid  + 1;
                 
             }
             
             if(arr[mid] > x)
                h = mid -1;
             
             else if (arr[mid] < x)
                l = mid + 1;
        }
        
        return res;
    }
	int count(int arr[], int n, int x) {
	  
	  if(n<=0) return 0;
	  
	  
	  int first = firstBS(arr, n , x );
	  int last = lastBS(arr, n, x );
	  
	  if(last == -1 || last == -1 )
	    return 0;
	    
	  return last - first + 1 ;
	}
};