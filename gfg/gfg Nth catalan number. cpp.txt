//============================= memoization ==========================

class Solution
{
private:
    
    int t[1001];
    int mod = 1e9+7;
    public:
    
    int solve(int n){
        if(n<=1) return 1;
        
        if(t[n] !=-1 ) return t[n];
        
        int ans=0;
        for(int i=1;  i<=n; i++){
            ans= (ans +(1LL *solve(i-1)*solve(n-i))%mod)%mod;
        }
        
        return t[n] = ans;
    }
    
    
    
    
    int findCatalan(int n) 
    {
        memset(t,-1,sizeof(t));
        return solve(n);
    }
};

//======================= dp ==========================
class Solution
{
private:
    
    int t[1001];
    int mod = 1e9+7;
public:
   
    int solveTab(int n){
        
        t[0]=t[1]=1;
        
        for(int i=2; i<n+1 ;i++){
            
            for(int j=1; j<=i; j++){
                t[i]= (t[i] + (1LL* t[j-1]*t[i-j])%mod)%mod;
            }
        }
        return t[n];
        
    }
    
    
    
    
    
    int findCatalan(int n) 
    {
        memset(t,0,sizeof(t));
        return solveTab(n);
    }
};