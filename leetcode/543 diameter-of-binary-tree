/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

int maxi;
int solve(TreeNode* root){

    if(root == nullptr) return 0;

    int l = solve(root->left);
    int r = solve(root->right);

    maxi = max(maxi, l+r); // from height we get the diameter
    return 1 + max(l,r); //we are using the height

}
public:
    int diameterOfBinaryTree(TreeNode* root) {
        maxi = INT_MIN;
        solve(root);
        return maxi;
    }
};
