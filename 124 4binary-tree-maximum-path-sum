/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {

int maxi;
int solve(TreeNode* root){

    if(root == nullptr) return 0;

    int l = max(0, solve(root->left)); // when this ans will return we can also get the -ve so in that case take 0
    int r = max(0, solve(root->right)); 

    maxi = max(maxi, l+r+ root->val);
    return max(l,r)+ root->val; //instead of writing max(max(l,r)+ root->val, root->val) use 0 in while -ve sum ...see upper
    
}
public:
    int maxPathSum(TreeNode* root) {
        maxi = INT_MIN;
        solve(root);
        return maxi;
    }
};
